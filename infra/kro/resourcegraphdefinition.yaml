apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: form-postgres-rgd
spec:
  schema:
    apiVersion: v1alpha1
    kind: FormApp
    spec:
      name: string
      image: string | default=""
      db: boolean | default=false
      isApp: boolean | default=false
      isDb: boolean | default=false
      ingress:
        enabled: boolean | default=false
  resources:
    - id: deployment
      includeWhen:
        - ${schema.spec.isApp}
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${schema.spec.name}
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: ${schema.spec.name}
          template:
            metadata:
              labels:
                app: ${schema.spec.name}
            spec:
              containers:
                - name: ${schema.spec.name}
                  image: ${schema.spec.image}
                  ports:
                    - containerPort: 8086

    - id: appService
      includeWhen:
        - ${schema.spec.isApp}
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${schema.spec.name}-svc
        spec:
          selector:
            app: ${schema.spec.name}
          ports:
            - port: 8086
              targetPort: 8086

    - id: statefulset
      includeWhen:
        - ${schema.spec.isDb}
      template:
        apiVersion: apps/v1
        kind: StatefulSet
        metadata:
          name: ${schema.spec.name}
        spec:
          selector:
            matchLabels:
              app: ${schema.spec.name}
          serviceName: ${schema.spec.name}-svc
          replicas: 1
          template:
            metadata:
              labels:
                app: ${schema.spec.name}
            spec:
              containers:
                - name: ${schema.spec.name}
                  image: bitnami/postgresql:12.1.0
                  env:
                    - name: POSTGRESQL_DATABASE
                      value: formdb
                    - name: POSTGRESQL_USERNAME
                      value: postgres
                    - name: POSTGRESQL_PASSWORD
                      value: postgres
                  ports:
                    - containerPort: 5432

    - id: postgresService
      includeWhen:
        - ${schema.spec.isDb}
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${schema.spec.name}-svc
        spec:
          selector:
            app: ${schema.spec.name}
          ports:
            - port: 5432
              targetPort: 5432

    - id: ingress
      includeWhen:
        - ${schema.spec.ingress.enabled}
      template:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: ${schema.spec.name}-ingress
        spec:
          rules:
            - http:
                paths:
                  - path: "/"
                    pathType: Prefix
                    backend:
                      service:
                        name: ${schema.spec.name}-svc
                        port:
                          number: 8086
